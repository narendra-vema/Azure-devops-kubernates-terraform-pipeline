# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest



stages:
- stage: Build
  jobs:
  - job: FirstJob
    steps:
    - bash: echo Build FirstJob
    - bash: echo $(PipelineLevelVariable)
    - bash: echo $(Build.BuildNumber)
    - bash: echo $(Build.BuildId)
    - bash: echo $(Build.SourceBranchName)
    - bash: echo $(Build.SourcesDirectory)
    - bash: echo $(System.DefaultWorkingDirectory)
    - bash: ls -R $(System.DefaultWorkingDirectory)
    - bash: echo $(Build.ArtifactStagingDirectory)
    - bash: java -version
    - bash: node --version
    - bash: python --version 
    - bash: mvn -version 
    - bash: ls -R $(Build.ArtifactStagingDirectory)
    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: |
          **/*.yaml
          **/*.tf
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
    - bash: ls -R $(Build.ArtifactStagingDirectory)
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'






# stages:
# - stage: Build
#   variables:
#     stageName: build stage
#   jobs: 
#   - job: FirstJob
#     steps: 
#     - bash: echo Hello $(stageName) is running keep wait!
#       displayName: 'Run a one-line script'
#   - job: SecondJob
#     dependsOn: FirstJob
#     condition: succeeded('FirstJob')
#     steps:
#     - bash: echo Hello from job2
#       displayName: 'Run a one-line script in job2'
# - stage : Devdeploy
#   variables:
#     stageName: Dev build stage
#   dependsOn: Build
#   jobs:
#   - job: DevdeployJob
#     steps:
#     - bash: echo Hello $(stageName) is running keep wait!
#       displayName: 'Run a one-line script in DevdeployJob'
#   - job: DevdeployJob2
#     dependsOn: DevdeployJob
#     condition: succeeded('DevdeployJob')
#     steps:
#     - bash: echo Hello from DevdeployJob2
#       displayName: 'Run a one-line script in DevdeployJob2'